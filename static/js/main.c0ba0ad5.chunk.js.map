{"version":3,"sources":["components/Header.jsx","store.js","components/StatsTable.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","textAlign","m","as","fontSize","color","href","isExternal","initialState","isFetching","stats","sortField","sortDirection","errorMsg","Reducer","state","action","type","payload","message","field","direction","Error","Context","createContext","StoreProvider","children","useReducer","dispatch","Provider","value","StatsTable","useContext","fetchStats","useCallback","season","axios","get","then","response","rspArr","sortStats","data","length","catch","error","useEffect","setSortField","array","sortedArr","sort","a","b","sortIcon","fieldName","TriangleDown","aria-label","TriangleUp","variant","size","onClick","map","team","idx","name","Math","round","cpr","Number","EPSILON","games_played","apop","apdp","appd","aopr","adpr","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c0ba0ad5.chunk.js","sourcesContent":["import React from \"react\";\nimport { Heading, Center, Text, Link } from \"@chakra-ui/react\"\n\nconst Header = () => {\n  return(\n    <>\n    <Center textAlign=\"center\" m=\"2rem\">\n      <Heading as='h1'>College Football Performance Ratio Stats</Heading>\n    </Center>\n    <Center>\n      <Text fontSize=\"med\"><Link color=\"#6286a2\" href=\"https://github.com/PeteHanner/football-stats/blob/main/README.md\" isExternal>What do all these acronyms mean?</Link></Text>\n    </Center>\n    <br/>\n    <Center>\n      <Text fontSize=\"sm\">by <Link color=\"#6286a2\" href=\"https://github.com/PeteHanner/football-stats-api\" isExternal>Pete Hanner</Link>, drive data courtesy of the <Link color=\"#6286a2\" href=\"https://api.collegefootballdata.com/api/docs/?url=/api-docs.json\" isExternal>College Football Stats API</Link></Text>\n    </Center>\n    <Center>\n      <Text fontSize=\"xs\">(NOTE: This is a prototype version with only stats for the 2020 season.)</Text>\n    </Center>\n    <br />\n    <br />\n    </>\n    )\n  }\n\n  export default Header;","import React, { createContext, useReducer } from \"react\";\n\nconst initialState = {\n  isFetching: false,\n  stats: [],\n  sortField: \"cpr\",\n  sortDirection: \"desc\",\n  errorMsg: \"\"\n}\n\nconst Reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_STATS_START\":\n      return {\n        ...state,\n        isFetching: true,\n      }\n    case \"FETCH_STATS_BAD_YEAR\":\n      return {\n        ...state,\n        isFetching: false,\n      }\n    case \"FETCH_STATS_SUCCESS\":\n      return {\n        ...state,\n        isFetching: false,\n        stats: action.payload,\n      }\n    case \"FETCH_STATS_FAILURE\":\n      return {\n        ...state,\n        isFetching: false,\n        errorMsg: action.payload.message\n      }\n    case \"SET_SORT_FIELD\":\n      return {\n        ...state,\n        sortField: action.payload.field,\n        sortDirection: action.payload.direction,\n      }\n    default:\n      throw new Error();\n  }\n}\n\nexport const Context = createContext(initialState)\n\nexport const StoreProvider = ({children}) => {\n  const [state, dispatch] = useReducer(Reducer, initialState);\n\n  return (\n    <Context.Provider value={[state, dispatch]}>\n      { children }\n    </Context.Provider>\n  )\n}\n","import React, { useCallback, useContext, useEffect } from \"react\";\nimport { Context } from \"../store\"\nimport axios from \"axios\"\nimport { Table, Thead, Tbody, Tr, Th, Td, Center } from \"@chakra-ui/react\"\nimport { TriangleDownIcon, TriangleUpIcon } from \"@chakra-ui/icons\";\n\nconst StatsTable = () => {\n  const [state, dispatch] = useContext(Context);\n  const { stats, sortField, sortDirection } = state;\n\n  const fetchStats = useCallback((season) => {\n    dispatch({ type: \"FETCH_STATS_START\" })\n    axios.get(`https://pete-hanner-football-stats-api.herokuapp.com/seasons/${season}`)\n    .then(response => {\n      const rspArr = sortStats(response.data)\n      if (rspArr.length <= 1) {\n        dispatch({ type: \"FETCH_STATS_BAD_YEAR\" })\n        // TODO: Push correct year to history\n      } else {\n        dispatch({\n          type: \"FETCH_STATS_SUCCESS\",\n          payload: rspArr\n        })\n      }\n    })\n    .catch(error => {\n      dispatch({\n        type: \"FETCH_STATS_FAILURE\",\n        payload: error\n      })\n    })\n  }, [dispatch]);\n\n  useEffect(() => {\n    fetchStats(2020);\n  }, [fetchStats]);\n\n  useEffect(() => {\n    sortStats(stats)\n  }, [sortField, sortDirection])\n\n  const setSortField = (field) => {\n    let direction = sortDirection\n    if (sortField === field && direction === \"asc\") {\n      direction = \"desc\"\n    } else if (sortField === field && direction === \"desc\") {\n      direction = \"asc\"\n    }\n\n    dispatch({\n      type: \"SET_SORT_FIELD\",\n      payload: {\n        field: field,\n        direction: direction,\n      },\n    })\n  }\n\n  const sortStats = (array) => {\n    const sortedArr = array.sort((a, b) => {\n      if (a[sortField] < b[sortField]) {\n        return sortDirection === \"desc\" ? 1 : -1;\n      }\n      if (a[sortField] > b[sortField]) {\n        return sortDirection === \"desc\" ? -1 : 1;\n      }\n      return 0;\n    })\n\n    dispatch({\n      type: \"FETCH_STATS_SUCCESS\",\n      payload: sortedArr,\n    })\n  }\n\n  const buildStatsTable = () => {\n    if (stats.length > 1) {\n      return(stats.map((team, idx) => {\n        return(\n          <Tr key={idx}>\n            <Td>{idx + 1}</Td>\n            <Td><strong>{team.name}</strong></Td>\n            <Td><strong>{Math.round((team.cpr + Number.EPSILON) * 100) / 100}%</strong></Td>\n            <Td>{team.games_played}</Td>\n            <Td>{Math.round((team.apop + Number.EPSILON) * 100) / 100}</Td>\n            <Td>{Math.round((team.apdp + Number.EPSILON) * 100) / 100}</Td>\n            <Td>{Math.round((team.appd + Number.EPSILON) * 100) / 100}</Td>\n            <Td>{Math.round((team.aopr + Number.EPSILON) * 100) / 100}%</Td>\n            <Td>{Math.round((team.adpr + Number.EPSILON) * 100) / 100}%</Td>\n          </Tr>\n        )\n      }))\n    } else if (state.errorMsg) {\n      return(\n        <Center>\n          <Tr key=\"0\">Something's gone wrong. Please wait a moment and refresh.</Tr>\n        </Center>\n      )\n    } else {\n      return(\n        <Center>\n          <Tr key=\"0\">Loading team data...</Tr>\n        </Center>\n      )\n    }\n  }\n\n  const sortIcon = (fieldName) => {\n    if (sortField === fieldName) {\n      return sortDirection === \"asc\" ? <TriangleDownIcon aria-label=\"sorted descending\" /> : <TriangleUpIcon aria-label=\"sorted ascending\" />\n    }\n    return \"\"\n  }\n\n  return(\n    <>\n      <Table variant=\"striped\" size=\"sm\">\n        <Thead>\n          <Tr>\n            <Th />\n            <Th onClick={() => setSortField(\"name\")}>Team {sortIcon(\"name\")}</Th>\n            <Th onClick={() => setSortField(\"cpr\")}>CPR {sortIcon(\"cpr\")}</Th>\n            <Th onClick={() => setSortField(\"games_played\")}>Games Played {sortIcon(\"games_played\")}</Th>\n            <Th onClick={() => setSortField(\"apop\")}>APOP {sortIcon(\"apop\")}</Th>\n            <Th onClick={() => setSortField(\"apdp\")}>APDP {sortIcon(\"apdp\")}</Th>\n            <Th onClick={() => setSortField(\"appd\")}>APPD {sortIcon(\"appd\")}</Th>\n            <Th onClick={() => setSortField(\"aopr\")}>AOPR {sortIcon(\"aopr\")}</Th>\n            <Th onClick={() => setSortField(\"adpr\")}>ADPR {sortIcon(\"adpr\")}</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {buildStatsTable()}\n        </Tbody>\n      </Table>\n    </>\n    )\n  }\n\n  export default StatsTable;","import Header from \"./components/Header\";\nimport StatsTable from \"./components/StatsTable\";\n\nfunction App() {\n  return (\n    <>\n      <Header/>\n      <StatsTable/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { StoreProvider } from \"./store.js\"\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider } from \"@chakra-ui/react\"\n\nReactDOM.render(\n  <ChakraProvider>\n    <StoreProvider>\n      <App />\n    </StoreProvider>\n  </ChakraProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}